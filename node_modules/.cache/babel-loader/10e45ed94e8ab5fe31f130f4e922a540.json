{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jalem\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\React\\\\udemy\\\\01-starting-project\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nlog;\n\nfunction CartProvider(props) {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  console.log(cartState);\n\n  function addItemTocarthandler(item) {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  }\n\n  ;\n\n  function removeItemFromcarthandler(id) {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  }\n\n  ;\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemTocarthandler,\n    removeItem: removeItemFromcarthandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/jalem/OneDrive/Рабочий стол/React/udemy/01-starting-project/src/store/CartProvider.js"],"names":["CartContext","useReducer","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","price","amount","log","CartProvider","props","cartState","dispatchCartAction","console","addItemTocarthandler","removeItemFromcarthandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAC,EADe;AAErBC,EAAAA,WAAW,EAAC;AAFS,CAAzB;;AAIA,MAAMC,WAAW,GAAE,CAACC,KAAD,EAAQC,MAAR,KAAkB;AACjC,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EAAyB;AACrB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMC,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MAA/E;AACA,WAAM;AACFX,MAAAA,KAAK,EAACM,YADJ;AAEFL,MAAAA,WAAW,EAACQ;AAFV,KAAN;AAIH;;AACD,SAAOV,gBAAP;AACH,CAVD;;AAYAa,GAAG;;AACH,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAAA;;AACzB,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkClB,UAAU,CAACI,WAAD,EAAcH,gBAAd,CAAlD;AAEAkB,EAAAA,OAAO,CAACL,GAAR,CAAYG,SAAZ;;AAEC,WAASG,oBAAT,CAA8BV,IAA9B,EAAmC;AAC/BQ,IAAAA,kBAAkB,CAAC;AAACX,MAAAA,IAAI,EAAC,KAAN;AAAaG,MAAAA,IAAI,EAACA;AAAlB,KAAD,CAAlB;AACH;;AAAA;;AAED,WAASW,yBAAT,CAAmCC,EAAnC,EAAsC;AAClCJ,IAAAA,kBAAkB,CAAC;AAACX,MAAAA,IAAI,EAAC,QAAN;AAAgBe,MAAAA,EAAE,EAACA;AAAnB,KAAD,CAAlB;AACH;;AAAA;AAED,QAAMC,WAAW,GAAC;AACdrB,IAAAA,KAAK,EAACe,SAAS,CAACf,KADF;AAEdC,IAAAA,WAAW,EAACc,SAAS,CAACd,WAFR;AAGdqB,IAAAA,OAAO,EAACJ,oBAHM;AAIdK,IAAAA,UAAU,EAACJ;AAJG,GAAlB;AAMA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACKP,KAAK,CAACU;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAzBQX,Y;;KAAAA,Y;AA0BT,eAAeA,YAAf","sourcesContent":["import CartContext from \"./cart-context\";\r\nimport { useReducer } from \"react\";\r\n\r\nconst defaultCartState = {\r\n    items:[],\r\n    totalAmount:0\r\n}\r\nconst cartReducer= (state, action) =>{\r\n    if(action.type === \"ADD\"){\r\n        const updatedItems = state.items.concat(action.item);\r\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n        return{\r\n            items:updatedItems,\r\n            totalAmount:updatedTotalAmount\r\n        };\r\n    }\r\n    return defaultCartState;\r\n}\r\n\r\nlog\r\nfunction CartProvider(props){\r\n   const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n   console.log(cartState);\r\n\r\n    function addItemTocarthandler(item){\r\n        dispatchCartAction({type:\"ADD\", item:item})\r\n    };\r\n\r\n    function removeItemFromcarthandler(id){\r\n        dispatchCartAction({type:\"REMOVE\", id:id})\r\n    };\r\n\r\n    const cartContext={\r\n        items:cartState.items,\r\n        totalAmount:cartState.totalAmount,\r\n        addItem:addItemTocarthandler,\r\n        removeItem:removeItemFromcarthandler\r\n    }\r\n    return(\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n\r\n}\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}